<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.IEmployeeDAO">
    <resultMap id="employeeResultMap" type="domain.Employee" autoMapping="false">
        <result column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="surname" property="surname"/>
        <result column="email" property="email"/>
        <result column="personal_id" property="personalId"/>
        <result column="id" property="employeeId"/>
        <result column="position" property="position"/>
    </resultMap>

    <select id="select" parameterType="int" resultMap="employeeResultMap">
        SELECT e.user_id, e.id, u.name, u.surname, u.email, u.personal_id, e.position FROM users u JOIN employees e on u.id = e.user_id and e.id = #{id}
    </select>

    <select id="selectAll" resultMap="employeeResultMap">
        SELECT e.user_id, e.id, u.name, u.surname, u.email, u.personal_id, e.position FROM users u RIGHT JOIN employees e on u.id = e.user_id
    </select>

    <insert id="insert" parameterType="domain.Employee">
        INSERT into employees (user_id, position) VALUES (#{employee.userId}, #{employee.position})
    </insert>

    <delete id="delete">
        DELETE FROM users u JOIN employees e on u.id = e.user_id WHERE u.id = #{id}
    </delete>

    <update id="update">
        UPDATE users u JOIN employees e on u.id = e.user_id
        SET u.name = #{employee.name},
        u.surname = #{employee.surname},
        u.email = #{employee.email},
        u.personal_id = #{employee.personalId},
        e.position = #{employee.position}
        WHERE u.id = #{id}
    </update>
</mapper>