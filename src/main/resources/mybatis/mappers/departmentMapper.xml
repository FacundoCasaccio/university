<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.IDepartmentDAO">
    <resultMap id="departmentResultMap" type="domain.Department" autoMapping="false">
        <result column="id" property="departmentId"/>
        <result column="area" property="area"/>
        <result column="head" property="head.professorId"/>
        <result column="user_id" property="head.userId"/>
        <result column="name" property="head.name"/>
        <result column="surname" property="head.surname"/>
        <result column="email" property="head.email"/>
        <result column="personal_id" property="head.personalId"/>
        <result column="degree" property="head.degree"/>
    </resultMap>

    <resultMap id="professorResultMap" type="domain.Professor" autoMapping="false">
        <result column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="surname" property="surname"/>
        <result column="email" property="email"/>
        <result column="personal_id" property="personalId"/>
        <result column="id" property="professorId"/>
        <result column="degree" property="degree"/>

    </resultMap>

    <select id="select" parameterType="int" resultMap="departmentResultMap">
        SELECT d.id, d.area, p.user_id, d.head, u.name, u.surname, u.email, u.personal_id, p.degree FROM departments d
        JOIN professors p on d.head = p.id
        JOIN users u on p.user_id = u.id WHERE d.id = #{id}
    </select>

    <select id="selectAll" resultMap="departmentResultMap">
        SELECT d.id, d.area, p.user_id, d.head, u.name, u.surname, u.email, u.personal_id, p.degree FROM departments d
        JOIN professors p on d.head = p.id
        JOIN users u on p.user_id = u.id
    </select>

    <select id="selectDepartmentProfessors" resultMap="professorResultMap">
        SELECT p.user_id, p.id, u.name, u.surname, u.email, u.personal_id, p.degree FROM users u
        RIGHT JOIN professors p on u.id = p.user_id
        JOIN professor_department pd on pd.professor_id = p.id and pd.department_id = #{department.departmentId}
    </select>

    <insert id="insert" parameterType="domain.Department">
        INSERT INTO departments (area, head) VALUES (#{department.area}, #{department.head.professorId})
    </insert>

    <delete id="delete">
        DELETE FROM departments WHERE id = #{id}
    </delete>

    <update id="update">
        UPDATE departments SET area = #{department.area}, head = #{department.head} WHERE id = #{id}
    </update>
</mapper>